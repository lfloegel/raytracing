#include "color.h"
#include "vec3.h"

#include <iostream>

int main() {

    // Image

    const int image_width = 256;
    const int image_height = 256;

    // Render

    std::cout << "P3\n" << image_width << ' ' << image_height << "\n255\n";

    for (int j = image_height-1; j >= 0; --j) { //beginning from top to bottom 
        std::cerr << "\rScanlines remaining: " << j << ' ' << std::flush;
        for (int i = 0; i < image_width; ++i) { //beginning from left to right  
            color pixel_color(double(i)/(image_width-1), double(j)/(image_height-1), 0.25); //passing into vec3 constructor 
                                                                                            //pixel_color(x, y, z) 
            write_color(std::cout, pixel_color); 
            /*
            auto r = double(i) / (image_width-1); //normalizing it to range from 0 to 1 
            auto g = double(j) / (image_height-1);
            auto b = 0.25; 

            int ir = static_cast<int>(255.999 * r); 
            int ig = static_cast<int>(255.999 * g);
            int ib = static_cast<int>(255.999 * b);

            std::cout << ir << ' ' << ig << ' ' << ib << '\n'; //writes to file parsed to form image 
            */ 
        }
    } 

    std::cerr << "\nDone.\n"; 
}