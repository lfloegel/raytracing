to get coollooking solid textures, use some form of perlin noise 
returns blurred white noise 
imporant part: perlin noise is repeatable, usually done as hack to be fast and simple 
    takes 3d point as input and always returns same randomish number
    nearby points return similar numbers 

tile all of space with 3d array of random numbers and use them in blocks 
use hashing instead of tiling to not get blocking in image 

to smoothen: linear interpolate 
grid features remain 
    some of it is Mach bands 
        perceptual artifact of linear interpolation of color 
standard trick: use a Hermite cube to round off interpolation 
hermite image bit low frequency 
    scale input point to make it vary more quickly 

frequency image blocky looking 
    min and max of pattern always land exactly on integer x,y,z 
    instead put random unit vectors instead of just floats on lattice points and use dot product to move min and max 
    off latice 
        first change random floats to random vectors 
            vectors are any reasonable set of irregular directions 
            in book, not uniform 

out put of perlin interpolation can return - values 
    - values passed to sqrt() of gamma function and get turned into NaNs 
    cast perlin output back to between 0 and 1 

turbulence: composite noise that has multiple summed frequencies 
    often used 
    sum of repeated calls to noise 
    usually used indirectly 
    i.e. simple marble like texture 
            base idea to make color proportional to something like sine function 
            use turbulence to adjust phase 
                shifts x in sin(x) 
                makes stripes undulate 


