cornell box usually has two boxes in it 
    rotated relative to walls 

first make axis aligned block primitive that holds six rectangles 
    rotate a bit to match real Cornell box 
    in ray tracing, done with an instance 
    instance: geometric primitive that has been moved or rotated somehow 
        easy in ray tracing 
            don't move anything, instead move rays in opposite direction 
            i.e. can take box at origin and add two to all its x components, or leave box where it is, but in hit 
            routine subtract two off x component of ray origin 
        translate instance: to move any underlying hittable 

commong graphics tactic: apply all rotations about x, y, and z axes 
    rotations in some sense axis aligned 
    first, rotate by theta about z axis 
        changing only x and y, and in ways that don't depend on z 
        rotating counter clockwise about z: 
            x' = cos(Ø) * x - sin(Ø) * y 
            y' = sin(Ø) * x + cos(Ø) * y 
            works for any Ø 
            no cases for any quadrants 
        inverse transform opposite geometric expression: rotate by -Ø 
            cos(Ø) = cos(-Ø) 
            sin(-Ø) = -sin(Ø) 
    rotating about y: 
        x' = cos(Ø) * x + sin(Ø) * z 
        z' = sin(Ø) * x + cos(Ø) * z 
    rotating about x: 
        y' = cos(Ø) * y - sin(Ø) * z 
        z' = cos(Ø) * y + sin(Ø) * z 
    unlike situations with translation, surface normal changes 
        need to tranform directions too if get hit 
        same formulas for rotations apply 